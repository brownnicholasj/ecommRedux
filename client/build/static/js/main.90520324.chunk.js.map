{"version":3,"sources":["assets/spinner.gif","utils/helpers.js","components/ProductItem/index.js","utils/actions.js","utils/queries.js","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","utils/reducers.js","utils/store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","ProductItem","item","state","useSelector","dispatch","useDispatch","image","name","price","quantity","cart","className","to","alt","src","count","pluralize","onClick","itemInCart","find","cartItem","type","purchaseQuantity","parseInt","product","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","currentCategory","useQuery","loading","data","useEffect","products","forEach","then","length","filter","category","map","key","spinner","CategoryMenu","categories","categoryData","id","CartItem","placeholder","value","onChange","target","role","aria-label","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","a","getCart","cartOpen","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","initialState","reducer","action","newState","createStore","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.90520324.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { pluralize } from '../../utils/helpers';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction ProductItem(item) {\n\tconst state = useSelector((state) => {\n\t\treturn state;\n\t});\n\n\tconst dispatch = useDispatch();\n\tconst { image, name, _id, price, quantity } = item;\n\n\tconst { cart } = state;\n\n\tconst addToCart = () => {\n\t\tconst itemInCart = cart.find((cartItem) => cartItem._id === _id);\n\t\tif (itemInCart) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_CART_QUANTITY,\n\t\t\t\t_id: _id,\n\t\t\t\tpurchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', {\n\t\t\t\t...itemInCart,\n\t\t\t\tpurchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n\t\t\t});\n\t\t} else {\n\t\t\tdispatch({\n\t\t\t\ttype: ADD_TO_CART,\n\t\t\t\tproduct: { ...item, purchaseQuantity: 1 },\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='card px-1 py-1'>\n\t\t\t<Link to={`/products/${_id}`}>\n\t\t\t\t<img alt={name} src={`/images/${image}`} />\n\t\t\t\t<p>{name}</p>\n\t\t\t</Link>\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t{quantity} {pluralize('item', quantity)} in stock\n\t\t\t\t</div>\n\t\t\t\t<span>${price}</span>\n\t\t\t</div>\n\t\t\t<button onClick={addToCart}>Add to cart</button>\n\t\t</div>\n\t);\n}\n\nexport default ProductItem;\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction ProductList() {\n\tconst state = useSelector((state) => {\n\t\treturn state;\n\t});\n\tconst dispatch = useDispatch();\n\n\tconst { currentCategory } = state;\n\n\tconst { loading, data } = useQuery(QUERY_PRODUCTS);\n\n\tuseEffect(() => {\n\t\tif (data) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_PRODUCTS,\n\t\t\t\tproducts: data.products,\n\t\t\t});\n\t\t\tdata.products.forEach((product) => {\n\t\t\t\tidbPromise('products', 'put', product);\n\t\t\t});\n\t\t} else if (!loading) {\n\t\t\tidbPromise('products', 'get').then((products) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: UPDATE_PRODUCTS,\n\t\t\t\t\tproducts: products,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, [data, loading, dispatch]);\n\n\tfunction filterProducts() {\n\t\tif (!currentCategory) {\n\t\t\treturn state.products;\n\t\t}\n\n\t\treturn state.products.filter(\n\t\t\t(product) => product.category._id === currentCategory\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className='my-2'>\n\t\t\t<h2>Our Products:</h2>\n\t\t\t{state.products.length ? (\n\t\t\t\t<div className='flex-row'>\n\t\t\t\t\t{filterProducts().map((product) => (\n\t\t\t\t\t\t<ProductItem\n\t\t\t\t\t\t\tkey={product._id}\n\t\t\t\t\t\t\t_id={product._id}\n\t\t\t\t\t\t\timage={product.image}\n\t\t\t\t\t\t\tname={product.name}\n\t\t\t\t\t\t\tprice={product.price}\n\t\t\t\t\t\t\tquantity={product.quantity}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<h3>You haven't added any products yet!</h3>\n\t\t\t)}\n\t\t\t{loading ? <img src={spinner} alt='loading' /> : null}\n\t\t</div>\n\t);\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport {\n\tUPDATE_CATEGORIES,\n\tUPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction CategoryMenu() {\n\tconst state = useSelector((state) => {\n\t\treturn state;\n\t});\n\tconst dispatch = useDispatch();\n\n\tconst { categories } = state;\n\n\tconst { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n\tuseEffect(() => {\n\t\tif (categoryData) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_CATEGORIES,\n\t\t\t\tcategories: categoryData.categories,\n\t\t\t});\n\t\t\tcategoryData.categories.forEach((category) => {\n\t\t\t\tidbPromise('categories', 'put', category);\n\t\t\t});\n\t\t} else if (!loading) {\n\t\t\tidbPromise('categories', 'get').then((categories) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: UPDATE_CATEGORIES,\n\t\t\t\t\tcategories: categories,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, [categoryData, loading, dispatch]);\n\n\tconst handleClick = (id) => {\n\t\tdispatch({\n\t\t\ttype: UPDATE_CURRENT_CATEGORY,\n\t\t\tcurrentCategory: id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Choose a Category:</h2>\n\t\t\t{categories.map((item) => (\n\t\t\t\t<button\n\t\t\t\t\tkey={item._id}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\thandleClick(item._id);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{item.name}\n\t\t\t\t</button>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\n\nconst CartItem = ({ item }) => {\n\tconst dispatch = useDispatch();\n\n\tconst removeFromCart = (item) => {\n\t\tdispatch({\n\t\t\ttype: REMOVE_FROM_CART,\n\t\t\t_id: item._id,\n\t\t});\n\t\tidbPromise('cart', 'delete', { ...item });\n\t};\n\n\tconst onChange = (e) => {\n\t\tconst value = e.target.value;\n\t\tif (value === '0') {\n\t\t\tdispatch({\n\t\t\t\ttype: REMOVE_FROM_CART,\n\t\t\t\t_id: item._id,\n\t\t\t});\n\t\t\tidbPromise('cart', 'delete', { ...item });\n\t\t} else {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_CART_QUANTITY,\n\t\t\t\t_id: item._id,\n\t\t\t\tpurchaseQuantity: parseInt(value),\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='flex-row'>\n\t\t\t<div>\n\t\t\t\t<img src={`/images/${item.image}`} alt='' />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t{item.name}, ${item.price}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<span>Qty:</span>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tplaceholder='1'\n\t\t\t\t\t\tvalue={item.purchaseQuantity}\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<span\n\t\t\t\t\t\trole='img'\n\t\t\t\t\t\taria-label='trash'\n\t\t\t\t\t\tonClick={() => removeFromCart(item)}\n\t\t\t\t\t>\n\t\t\t\t\t\t🗑️\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n\tconst state = useSelector((state) => {\n\t\treturn state;\n\t});\n\n\tconst dispatch = useDispatch();\n\tconst [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n\tuseEffect(() => {\n\t\tif (data) {\n\t\t\tstripePromise.then((res) => {\n\t\t\t\tres.redirectToCheckout({ sessionId: data.checkout.session });\n\t\t\t});\n\t\t}\n\t}, [data]);\n\n\tuseEffect(() => {\n\t\tasync function getCart() {\n\t\t\tconst cart = await idbPromise('cart', 'get');\n\t\t\tdispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n\t\t}\n\n\t\tif (!state.cart.length) {\n\t\t\tgetCart();\n\t\t}\n\t}, [state.cart.length, dispatch]);\n\n\tfunction toggleCart() {\n\t\tdispatch({ type: TOGGLE_CART });\n\t}\n\n\tfunction calculateTotal() {\n\t\tlet sum = 0;\n\t\tstate.cart.forEach((item) => {\n\t\t\tsum += item.price * item.purchaseQuantity;\n\t\t});\n\t\treturn sum.toFixed(2);\n\t}\n\n\tfunction submitCheckout() {\n\t\tconst productIds = [];\n\n\t\tstate.cart.forEach((item) => {\n\t\t\tfor (let i = 0; i < item.purchaseQuantity; i++) {\n\t\t\t\tproductIds.push(item._id);\n\t\t\t}\n\t\t});\n\n\t\tgetCheckout({\n\t\t\tvariables: { products: productIds },\n\t\t});\n\t}\n\n\tif (!state.cartOpen) {\n\t\treturn (\n\t\t\t<div className='cart-closed' onClick={toggleCart}>\n\t\t\t\t<span role='img' aria-label='trash'>\n\t\t\t\t\t🛒\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className='cart'>\n\t\t\t<div className='close' onClick={toggleCart}>\n\t\t\t\t[close]\n\t\t\t</div>\n\t\t\t<h2>Shopping Cart</h2>\n\t\t\t{state.cart.length ? (\n\t\t\t\t<div>\n\t\t\t\t\t{state.cart.map((item) => (\n\t\t\t\t\t\t<CartItem key={item._id} item={item} />\n\t\t\t\t\t))}\n\n\t\t\t\t\t<div className='flex-row space-between'>\n\t\t\t\t\t\t<strong>Total: ${calculateTotal()}</strong>\n\n\t\t\t\t\t\t{Auth.loggedIn() ? (\n\t\t\t\t\t\t\t<button onClick={submitCheckout}>Checkout</button>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<span>(log in to check out)</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<h3>\n\t\t\t\t\t<span role='img' aria-label='shocked'>\n\t\t\t\t\t\t😱\n\t\t\t\t\t</span>\n\t\t\t\t\tYou haven't added anything to your cart yet!\n\t\t\t\t</h3>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Cart;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n\tREMOVE_FROM_CART,\n\tUPDATE_CART_QUANTITY,\n\tADD_TO_CART,\n\tUPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n\tconst state = useSelector((state) => {\n\t\treturn state;\n\t});\n\tconst dispatch = useDispatch();\n\tconst { id } = useParams();\n\n\tconst [currentProduct, setCurrentProduct] = useState({});\n\n\tconst { loading, data } = useQuery(QUERY_PRODUCTS);\n\n\tconst { products, cart } = state;\n\n\tuseEffect(() => {\n\t\t// already in global store\n\t\tif (products.length) {\n\t\t\tsetCurrentProduct(products.find((product) => product._id === id));\n\t\t}\n\t\t// retrieved from server\n\t\telse if (data) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_PRODUCTS,\n\t\t\t\tproducts: data.products,\n\t\t\t});\n\n\t\t\tdata.products.forEach((product) => {\n\t\t\t\tidbPromise('products', 'put', product);\n\t\t\t});\n\t\t}\n\t\t// get cache from idb\n\t\telse if (!loading) {\n\t\t\tidbPromise('products', 'get').then((indexedProducts) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: UPDATE_PRODUCTS,\n\t\t\t\t\tproducts: indexedProducts,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, [products, data, loading, dispatch, id]);\n\n\tconst addToCart = () => {\n\t\tconst itemInCart = cart.find((cartItem) => cartItem._id === id);\n\t\tif (itemInCart) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_CART_QUANTITY,\n\t\t\t\t_id: id,\n\t\t\t\tpurchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', {\n\t\t\t\t...itemInCart,\n\t\t\t\tpurchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n\t\t\t});\n\t\t} else {\n\t\t\tdispatch({\n\t\t\t\ttype: ADD_TO_CART,\n\t\t\t\tproduct: { ...currentProduct, purchaseQuantity: 1 },\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n\t\t}\n\t};\n\n\tconst removeFromCart = () => {\n\t\tdispatch({\n\t\t\ttype: REMOVE_FROM_CART,\n\t\t\t_id: currentProduct._id,\n\t\t});\n\n\t\tidbPromise('cart', 'delete', { ...currentProduct });\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{currentProduct && cart ? (\n\t\t\t\t<div className='container my-1'>\n\t\t\t\t\t<Link to='/'>← Back to Products</Link>\n\n\t\t\t\t\t<h2>{currentProduct.name}</h2>\n\n\t\t\t\t\t<p>{currentProduct.description}</p>\n\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<strong>Price:</strong>${currentProduct.price}{' '}\n\t\t\t\t\t\t<button onClick={addToCart}>Add to Cart</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tdisabled={!cart.find((p) => p._id === currentProduct._id)}\n\t\t\t\t\t\t\tonClick={removeFromCart}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRemove from Cart\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={`/images/${currentProduct.image}`}\n\t\t\t\t\t\talt={currentProduct.name}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t{loading ? <img src={spinner} alt='loading' /> : null}\n\t\t\t<Cart />\n\t\t</>\n\t);\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import {\n\tUPDATE_PRODUCTS,\n\tADD_TO_CART,\n\tUPDATE_CART_QUANTITY,\n\tREMOVE_FROM_CART,\n\tADD_MULTIPLE_TO_CART,\n\tUPDATE_CATEGORIES,\n\tUPDATE_CURRENT_CATEGORY,\n\tCLEAR_CART,\n\tTOGGLE_CART,\n} from './actions';\n\nconst initialState = {\n\tproducts: [],\n\tcart: [],\n\tcartOpen: false,\n\tcategories: [],\n\tcurrentCategory: '',\n};\n\n// TODO: To get a better understand of how a reducer works - add comments to the various actions in the reducer\nexport const reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\t// TODO: Add a comment describing the functionality of the UPDATE_PRODUCTS case\n\t\t// Your comment here\n\t\tcase UPDATE_PRODUCTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tproducts: [...action.products],\n\t\t\t};\n\n\t\tcase ADD_TO_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: true,\n\t\t\t\tcart: [...state.cart, action.product],\n\t\t\t};\n\n\t\tcase ADD_MULTIPLE_TO_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcart: [...state.cart, ...action.products],\n\t\t\t};\n\t\t// TODO: Add a comment describing the functionality of the UPDATE_CART_QUANTITY case\n\t\t// Your comment here\n\t\tcase UPDATE_CART_QUANTITY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: true,\n\t\t\t\tcart: state.cart.map((product) => {\n\t\t\t\t\tif (action._id === product._id) {\n\t\t\t\t\t\tproduct.purchaseQuantity = action.purchaseQuantity;\n\t\t\t\t\t}\n\t\t\t\t\treturn product;\n\t\t\t\t}),\n\t\t\t};\n\n\t\t// TODO: Add a comment describing the functionality of the REMOVE_FROM_CART case\n\t\t// Your comment here\n\t\tcase REMOVE_FROM_CART:\n\t\t\tlet newState = state.cart.filter((product) => {\n\t\t\t\treturn product._id !== action._id;\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: newState.length > 0,\n\t\t\t\tcart: newState,\n\t\t\t};\n\n\t\tcase CLEAR_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: false,\n\t\t\t\tcart: [],\n\t\t\t};\n\n\t\tcase TOGGLE_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: !state.cartOpen,\n\t\t\t};\n\n\t\tcase UPDATE_CATEGORIES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcategories: [...action.categories],\n\t\t\t};\n\n\t\tcase UPDATE_CURRENT_CATEGORY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentCategory: action.currentCategory,\n\t\t\t};\n\n\t\t// TODO: Add a comment describing what the default case is for\n\t\t// Your comment here\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\n// export function useProductReducer(initialState) {\n// \treturn useReducer(reducer, initialState);\n// }\n\nexport default reducer;\n","import { createStore } from 'redux';\nimport { reducer } from './reducers';\n\nexport default createStore(reducer);\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n\tApolloClient,\n\tInMemoryCache,\n\tApolloProvider,\n\tcreateHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\n\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\nimport { Provider } from 'react-redux';\nimport store from './utils/store';\n\nconst httpLink = createHttpLink({\n\turi: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n\tconst token = localStorage.getItem('id_token');\n\treturn {\n\t\theaders: {\n\t\t\t...headers,\n\t\t\tauthorization: token ? `Bearer ${token}` : '',\n\t\t},\n\t};\n});\n\nconst client = new ApolloClient({\n\tlink: authLink.concat(httpLink),\n\tcache: new InMemoryCache(),\n});\n\nfunction App() {\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t\t<Router>\n\t\t\t\t<div>\n\t\t\t\t\t<Provider store={store}>\n\t\t\t\t\t\t<Nav />\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path='/' component={Home} />\n\t\t\t\t\t\t\t<Route exact path='/login' component={Login} />\n\t\t\t\t\t\t\t<Route exact path='/signup' component={Signup} />\n\t\t\t\t\t\t\t<Route exact path='/success' component={Success} />\n\t\t\t\t\t\t\t<Route exact path='/orderHistory' component={OrderHistory} />\n\t\t\t\t\t\t\t<Route exact path='/products/:id' component={Detail} />\n\t\t\t\t\t\t\t<Route component={NoMatch} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Provider>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</ApolloProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}